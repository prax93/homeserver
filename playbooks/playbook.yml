---

- name: Initial Server Setup
  hosts: HomeServer
  become: yes

  vars_prompt:
    - name: sambapresent
      prompt: "Do you own a Samba share ? [y/n] "
      private: false
  
  tasks:
    - name: Prompt for Samba username
      pause:
        prompt: "Enter your smb username: "
      when: sambapresent == "y"
      register: smbusername

    - name: Prompt for Samba password
      pause:
        prompt: "Enter your smb password: "
      when: sambapresent == "y"
      register: smbpassword

    - name: Prompt for Samba Path
      pause:
        prompt: "Enter your smb Path (//ip/shared-volume): "
      when: sambapresent == "y"
      register: sharelocation

    - name: Prompt for MountPoint
      pause:
        prompt: "Enter your smb share mountpoint (/mnt/smb/): "
      when: sambapresent == "y"
      register: smb_mount_point
    
    - name: Prompt for Media Location
      pause:
        prompt: "Enter your Media Location (ex: /home/media): "
      when: sambapresent == "n"
      register: smb_mount_point
    
    - name: Register Env Variable MOUNTPOINT
      set_fact:
        MOUNTPOINT: "{{ smb_mount_point.user_input if sambapresent == 'y' else media_location.user_input }}"

    - name: Ensure MOUNTPOINT is set as an environment variable
      lineinfile:
        path: /home/{{ ansible_user }}/.bashrc
        line: 'export MOUNTPOINT="{{ MOUNTPOINT }}"'
        create: yes
      when: MOUNTPOINT is defined
    
    - name: Install CIFS-Utils for Samba Share
      when: sambapresent == "y"
      ansible.builtin.apt:
        name: cifs-utils
        state: present

    # Mount Smb drive
    - name: Mount SMB Share
      when: sambapresent == "y"
      ansible.posix.mount:
        src: "{{ sharelocation.user_input }}"
        path: "{{ MOUNTPOINT }}"
        fstype: cifs
        opts: "username={{ smbusername.user_input }},password={{ smbpassword.user_input }}"
        state: mounted
        boot: true

    - name: Install Docker dependencies
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - pip
          - python3
        state: present

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - containerd
          - docker.io
          - docker-compose
        state: present

    # Create Group named Docker
    - name: Ensure group "Docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    # Append User to Docker Group
    - name: Append User to Docker Group
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        groups:
          - docker
        append: true

    # Install Jellyfin Server
    - name: Install Jellyfin
      ansible.builtin.apt:
        name:
          - jellyfin
        state: present

    # Install Plex Media Server
    - name: Install Plex
      community.general.snap:
        name:
          - plexmediaserver
        state: present
